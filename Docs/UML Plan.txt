@startuml
	package PropertyEntities
	{
		Interface IProperty
		{
			+ Name : string +<<get>> +<<set>>
			+ readonly Address : Addres +<<get>>
			- readonly PurchasePrice : decimal -<<get>>
			- readonly PurchaseDate : DateTime +<<get>>
			+ readonly Owner : IUser +<<get>>
			+ Transactions : List<ITransaction> +<<get>> +<<set>>
			+ ValueChanges : List<IValueChange> +<<get>> +<<set>>
			+ FixedCosts : List<IYearlyFixedCost> +<<get>> +<<set>>
			+ AmortizationRate : double +<<get>> +<<set>>
		}
		
		Interface IRentable
		{
			+ Tenant : ITenant +<<get>> +<<set>>
			+ RentalFee : decimal +<<get>> +<<set>>
			+ YearlyFixedCosts : decimal +<<get>> +<<set>>
			+ GenerateInvoice() : void
		}
		
		Interface IRentableProperty
		{
		}
		
		Class Property
		{
		}
		
		Class RentableProperty
		{
		}
	}
	
	package DTOs
	{
		package Properties
		{
			Interface IPropertyDTO
			{
				+ readonly Value : decimal +<<get>>
				+ readonly AdjustedValue : decimal +<<get>>
				+ readonly CurrentBalance : decimal +<<get>>
				+ readonly CurrentBalanceAdjusted : decimal +<<get>>
				+ PropertyDTO(IProperty) : PropertyDTO
				- CalculateValue() : void
				- CalculateAdjustedValue() : void
				- CalculateBalance() : void
				- CalculateBalanceAdjusted() : void
			}
			
			Class PropertyDTO
			{
			}
			
			Interface IRentablePropertyDTO
			{
				+ IRentablePropertyDto(IRentableProperty) : IRentablePropertyDto
				+ readonly YearlyRentalYield : double +<<get>>
				+ readonly YearlyRentalYieldAdjusted : double +<<get>>
				- CalculateYearlyRentalYield() : void
				- CalculateYearlyRentalYieldAdjusted() : void
			}
			
			Class RentablePropertyDTO
			{
			}
		}
		
		package Portfolio
		{
			Interface IPortfolioValuator
			{
				+ readonly PortfolioValue : decimal
				+ readonly PortfolioValueAdjusted : decimal
				+ readonly PortfolioBalance : decimal
				+ readonly PortfolioBalanceAdjusted : decimal
				+ IPortfolioValuator(Owner) : IPortfolioValuator
				- CalculatePortfolioValue() : decimal
				- CalculatePortfolioValueAdjusted() : decimal
				- CalculatePortfolioBalance() : decimal
				- CalculatePortfolioBalanceAdjusted() : decimal
			}
			
			Class PortfolioValuator
			{
			}
		}
		
		package UserDTOs
		{
			Interface IOwnerDTO
			{
				+ PropertyDTOs : List<IPropertyDTO> +<<get>> +<<set>>
				+ PortfolioValuator : IPortfolioValuator +<<get>> +<<set>>
				+ IOwnerDTO(Owner) : IOwnerDTO
			}
		}
	}
	
	package UtilityModels
	{
		Class Address
		{
			+ Country : string +<<get>> +<<set>>
			+ ZipCode : int +<<get>> +<<set>>
			+ City : string +<<get>> +<<set>>
			+ Street : string +<<get>> +<<set>>
			+ StreetNumber: int +<<get>> +<<set>>
			+ AdditionalInfo : string +<<get>> +<<set>>
		}
		
		Interface IReminder
		{
			+ Title : string +<<get>> +<<set>>
			+ Description : string +<<get>> +<<set>>
			+ StartDate : DateTime +<<get>> +<<set>>
			+ RecurrenceIntervalType : RecurrenceType +<<get>> +<<set>>
			+ RecurrenceInterval : int +<<get>> +<<set>>
		}
		
		Class Reminder
		{
		}
		
		Interface IYearlyFixedCost
		{
			+ Title : string +<<get>> +<<set>>
			+ Description : string +<<get>> +<<set>>
			+ Value : decimal +<<get>> +<<set>>
		}
		
		Class YearlyFixedCost
		{
		}
	}
	
	package ValueModifiers
	{
		Interface IValueChange
		{
			+ Title : string +<<get>> +<<set>>
			+ Descriprion : string +<<get>> +<<set>>
			+ Value : decimal +<<get>> +<<set>>
			+ Date : DateTime +<<get>> +<<set>>
		}
		
		Class ValueIncrease
		{
		}
		
		Class ValueDecrease
		{
		}
	}
	
	
	package Transactions
	{
		Interface ITransaction
		{
			+ Title : string +<<get>> +<<set>>
			+ Description : string +<<get>> +<<set>>
			+ Value : decimal +<<get>> +<<set>>
			+ AdjustedValue : decimal +<<get>> +<<set>>
			+ Date : DateTime +<<get>> +<<set>>
		}
		
		class Cost
		{
		}
		
		class Income
		{
		}
	}
	
	package Users
	{
	
		Interface IUser
		{
			+ UserId : string +<<get>> +<<set>>
		}
		
		Class Owner
		{
			+ Properties : List<IProperty> +<<get>> +<<set>>
		}

		Class Tenant
		{
			+ Property : IRentable +<<get>> +<<set>>
		}
	}
	
	Enum RecurrenceIntervalType
	{
		Day,
		Week,
		Month,
		Year
	}
	
	Owner *- IProperty
	Owner *- IPortfolioValuator
	Tenant - IRentable
	IUser -- IReminder
	
	IProperty -- IPropertyDTO
	IRentableProperty -- IRentablePropertyDTO
	Owner -- IOwnerDTO
	
	IProperty -- IValueChange
	IProperty -- ITransaction
	IProperty - IYearlyFixedCost
	IProperty - Address
	
	IReminder - RecurrenceIntervalType
	
	Reminder -[hidden]-> IValueChange
	Address -[hidden]-> ITransaction
	
	Class Reminder implements IReminder
	Class YearlyFixedCost implements IYearlyFixedCost
	
	Class PropertyDTO implements IPropertyDTO
	Class RentablePropertyDTO implements IRentablePropertyDTO 
	Class PortfolioValuator implements IPortfolioValuator
	
	Class ValueIncrease implements IValueChange
	Class ValueDecrease implements IValueChange
	
	Interface IRentableProperty implements IRentable
	Interface IRentableProperty implements IProperty
	Class Property implements IProperty
	Class RentableProperty implements IRentableProperty
	
	Class Cost implements ITransaction
	Class Income implements ITransaction
	
	Class Owner implements IUser
	Class Tenant implements IUser
	
@enduml
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PPMAPIDataAccess;

#nullable disable

namespace PPMAPIDataAccess.Migrations
{
    [DbContext(typeof(PPMDbContext))]
    [Migration("20230404130935_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PPMAPIModelLibrary.FinancialObjects.Transactions.Cost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RentalPropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("RentalPropertyId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.FinancialObjects.Transactions.Revenue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RentalPropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("RentalPropertyId");

                    b.ToTable("Revenues");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.FinancialObjects.ValueModifiers.ValueDecrease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RentalPropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("RentalPropertyId");

                    b.ToTable("ValueDecreases");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.FinancialObjects.ValueModifiers.ValueIncrease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RentalPropertyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.HasIndex("RentalPropertyId");

                    b.ToTable("ValueIncreases");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.Properties.Property", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal");

                    b.Property<float>("Size")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.Properties.RentalProperty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal");

                    b.Property<decimal>("RentalFee")
                        .HasColumnType("decimal");

                    b.Property<float>("Size")
                        .HasColumnType("real");

                    b.Property<string>("TenantUserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("TenantUserId");

                    b.ToTable("RentalProperties");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.Users.Owner", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.Users.Tenant", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId");

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.UtilityModels.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("int");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.FinancialObjects.Transactions.Cost", b =>
                {
                    b.HasOne("PPMAPIModelLibrary.Properties.Property", "Property")
                        .WithMany("Costs")
                        .HasForeignKey("PropertyId");

                    b.HasOne("PPMAPIModelLibrary.Properties.RentalProperty", "RentalProperty")
                        .WithMany("Costs")
                        .HasForeignKey("RentalPropertyId");

                    b.Navigation("Property");

                    b.Navigation("RentalProperty");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.FinancialObjects.Transactions.Revenue", b =>
                {
                    b.HasOne("PPMAPIModelLibrary.Properties.Property", "Property")
                        .WithMany("Revenues")
                        .HasForeignKey("PropertyId");

                    b.HasOne("PPMAPIModelLibrary.Properties.RentalProperty", "RentalProperty")
                        .WithMany("Revenues")
                        .HasForeignKey("RentalPropertyId");

                    b.Navigation("Property");

                    b.Navigation("RentalProperty");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.FinancialObjects.ValueModifiers.ValueDecrease", b =>
                {
                    b.HasOne("PPMAPIModelLibrary.Properties.Property", "Property")
                        .WithMany("ValueDecreases")
                        .HasForeignKey("PropertyId");

                    b.HasOne("PPMAPIModelLibrary.Properties.RentalProperty", "RentalProperty")
                        .WithMany("ValueDecreases")
                        .HasForeignKey("RentalPropertyId");

                    b.Navigation("Property");

                    b.Navigation("RentalProperty");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.FinancialObjects.ValueModifiers.ValueIncrease", b =>
                {
                    b.HasOne("PPMAPIModelLibrary.Properties.Property", "Property")
                        .WithMany("ValueIncreases")
                        .HasForeignKey("PropertyId");

                    b.HasOne("PPMAPIModelLibrary.Properties.RentalProperty", "RentalProperty")
                        .WithMany("ValueIncreases")
                        .HasForeignKey("RentalPropertyId");

                    b.Navigation("Property");

                    b.Navigation("RentalProperty");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.Properties.Property", b =>
                {
                    b.HasOne("PPMAPIModelLibrary.UtilityModels.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPMAPIModelLibrary.Users.Owner", "Owner")
                        .WithMany("Properties")
                        .HasForeignKey("OwnerUserId");

                    b.Navigation("Address");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.Properties.RentalProperty", b =>
                {
                    b.HasOne("PPMAPIModelLibrary.UtilityModels.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PPMAPIModelLibrary.Users.Owner", "Owner")
                        .WithMany("RentalProperties")
                        .HasForeignKey("OwnerUserId");

                    b.HasOne("PPMAPIModelLibrary.Users.Tenant", "Tenant")
                        .WithMany("Properties")
                        .HasForeignKey("TenantUserId");

                    b.Navigation("Address");

                    b.Navigation("Owner");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.Properties.Property", b =>
                {
                    b.Navigation("Costs");

                    b.Navigation("Revenues");

                    b.Navigation("ValueDecreases");

                    b.Navigation("ValueIncreases");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.Properties.RentalProperty", b =>
                {
                    b.Navigation("Costs");

                    b.Navigation("Revenues");

                    b.Navigation("ValueDecreases");

                    b.Navigation("ValueIncreases");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.Users.Owner", b =>
                {
                    b.Navigation("Properties");

                    b.Navigation("RentalProperties");
                });

            modelBuilder.Entity("PPMAPIModelLibrary.Users.Tenant", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
